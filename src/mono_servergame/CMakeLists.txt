#
#	Mono Game Library
#
# Glob Recurse for all .cs files in mono_servergame/
file(GLOB_RECURSE SRC_MONO_SERVERGAME 
	${CMAKE_CURRENT_SOURCE_DIR}/*.cs 
)

# Make sure to allow 'unsafe' code, we're doing gamedev...
# Turn on debug build if requested.
IF( CONFIG_BUILD_MONO_SERVERGAME_AS_DEBUG_BUILD )
	SET( MONO_SERVERGAME_ADDITIONAL_ARGS "-debug" "-unsafe")
ELSE()
	SET( MONO_SERVERGAME_ADDITIONAL_ARGS "-unsafe")
ENDIF()

# Add the ServerGame Mono assembly as a C# Mono build target.
add_mono_assembly(
    TARGET Mono_ServerGame_x64
    DESTINATION ${CMAKE_SOURCE_DIR}/baseq2
    TYPE library
    SOURCES ${SRC_MONO_SERVERGAME}
	ADDITIONAL_ARGS ${MONO_SERVERGAME_ADDITIONAL_ARGS}
)

# WID: This seems redundant, but, keeping it just in case.
SET_TARGET_PROPERTIES(Mono_ServerGame_x64
    PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/baseq2"
    LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_SOURCE_DIR}/baseq2"
    LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_SOURCE_DIR}/baseq2"
    LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_SOURCE_DIR}/baseq2"
    LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_SOURCE_DIR}/baseq2"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/baseq2"
    RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_SOURCE_DIR}/baseq2"
    RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_SOURCE_DIR}/baseq2"
    RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_SOURCE_DIR}/baseq2"
    RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_SOURCE_DIR}/baseq2"
    PREFIX ""
    DEBUG_POSTFIX ""
)